
button TODAY activate
fullcalendar button today activate
https://stackoverflow.com/questions/39645324/fullcalendar-make-today-button-for-current-month-active
The 'today' button is made inactive automatically when today's date is visible in the rendered calendar area since there is no point in jumping to 'today' if it is already visible. 












alert
https://stackoverflow.com/questions/51385666/jquery-filtering-with-radio-buttons-in-fullcalendar
https://jsfiddle.net/ayx0fkz3/
https://realrashid.github.io/sweet-alert/helpers?id=helpers
https://stackoverflow.com/questions/37358423/how-to-redirect-page-after-click-on-ok-button-on-sweet-alert
https://sweetalert2.github.io/#input-types
https://www.appcues.com/blog/67-open-source-modal-window-plugins-made-with-jquery-javascript-css-and-more





















SLOT WIDTH
https://github.com/fullcalendar/fullcalendar-scheduler/issues/252

https://fullcalendar.io/docs/upgrading-from-v4

https://stackoverflow.com/questions/15139527/fixed-column-widths-in-resource-fullcalendar

https://fullcalendar.io/docs/v3/events-function

https://stackoverflow.com/questions/26252938/fullcalendar-typeerror-fullcalendar-is-not-a-function


https://fullcalendar.io/docs/timeline-view --> hier slotMinWidth: 2, und dann wird schmaler!!!



ZUSATZ
#############################################################################

https://github.com/fullcalendar/fullcalendar/issues/4864 --> easily style lines between days (vertical resource view)

https://github.com/fullcalendar/fullcalendar/issues/4857 --> multiple definitions for selectConstraint/eventConstraint

https://github.com/fullcalendar/fullcalendar/issues/5095 --> Option to force the title to display a single date instead of the date range

https://codepen.io/maurroj/pen/ebrZQL --> ID USERS & ID RESSOURCES

https://fullcalendar.io/docs/view-specific-options --> View-Specific Options

https://github.com/fullcalendar/fullcalendar/issues/4609 --> now indicator across entire week in timeGrid view

https://github.com/fullcalendar/fullcalendar/issues/3175 --> options that depend on screen size

https://github.com/fullcalendar/fullcalendar/issues/4869 --> event DnD free vertical movement while obeying snapDuration in timeline views

scrollTime: 100 * 24 * 60 * 60 * 1000 ---> PROBIEREN

https://github.com/fullcalendar/fullcalendar/issues/3316 --> html in customButtons 

https://github.com/fullcalendar/fullcalendar/issues/345 --> CSS class for days w/ events over them

https://github.com/fullcalendar/fullcalendar/issues/4630 --> grau slot selectble

https://codepen.io/acerix/pen/povPqBr?&editable=true&editors=001 --> event output (if c =0)

https://fullcalendar.io/docs/custom-view-with-js --> Custom Views via JS (let HTML)

https://codepen.io/acerix/pen/JjYJeNq?editors=0010 --> button test click im Feld Fahrzeug










STOP: Copy events via ctrl, drag & drop






@extends ('layouts.default')

@section ('header')


<link rel="stylesheet" href="{{ Bust::url('/assets/fullcalendar/lib/main2.css') }}">
<link rel="stylesheet" href="{{ Bust::url('/assets/fullcalendar/lib/main.css') }}">

<script src='{{asset('assets/fullcalendar/lib/main.js')}}'></script>




<script src='{{asset('assets/fullcalendar/lib/locales/de.js')}}'></script>

<script src='{{asset('assets/fullcalendar/lib/locales.js')}}'></script>

{!! HTML::script('js/backend/calendar.js') !!}
{!! HTML::style('css/datepicker/default.css') !!}
{!! HTML::style('css/datepicker/default.date.css') !!}

	{{-- DATEPICKER --}}
	{!! HTML::script('js/datepicker/picker.js') !!}
	{!! HTML::script('js/datepicker/picker.date.js') !!}
  {!! HTML::script('js/datepicker/translations/de_DE.js') !!}

  {{-- CALCULATOR --}}
  {!! HTML::script('js/booking/booking_calculator_backend.js?190604') !!}


  
<script>
var calendar ;
var initial_picker = 0;
var div = document.createElement("div")
var newContent = document.createTextNode("Hi there and greetings!"); 
div.appendChild(newContent);
  document.addEventListener('DOMContentLoaded', function() {
    

    /* initialize the external events
    -----------------------------------------------------------------*/



    /* initialize the external events
    -----------------------------------------------------------------*/

    

    /* initialize the calendar
    -----------------------------------------------------------------*/

    
    var calendarEl = document.getElementById('calendar');
    calendar = new FullCalendar.Calendar(calendarEl, {
    initialDate: '{{$date ?? now()}}',

    events: '{{ route("bookings.overview.bookings") }}?city_id={{ $city_id ?? null}}',

    //slot width
    slotMinWidth: 20,
    slotMinTime: '05:00:00',
      slotMaxTime: '22:00:00',
    
   
      //neue Buchungen anlegen 
      selectable: true,
      selectMirror: true,
      

      customButtons: {
        DatePicker: {
          text: 'Datum',
            click: function(event) {
               if(!initial_picker){
                  var picker = $(event.target).pickadate({
                  timepicker: false,
                  datepicker: true,
                  format: 'yyyy-mm-dd',
                  value: '2020-07-27',
                  left: 'today',
                  weeks: true,
                });
                picker.on('change', function(event) {
                  var date = $(event.target).val();
                  var url = new URL(window.location.href)
                  url.searchParams.set('date', date)
                  window.location = url
              })
              initial_picker = 1
            }
          }
        }
      },

      //scrollTime: '08:00', // undo default 6am scrollTime
      headerToolbar: {
        left: 'prev today next DatePicker',
        center: 'title',
        right: 'resourceTimelineTenDay,resourceTimelineDay'
      },





      //neue Buchung anlegen mit prompt()
      select: function(arg) {
        var title = prompt('Neue Buchung anlegen?\n\n' + '1 -> intern\n' + '2 -> extern\n\n');
        switch (title) {
     
          case "1": //interne Buchung 
          var url = new URL("/bookings/create", window.location.origin)
          url.searchParams.set('vehicle_id', arg.resource.id)
          url.searchParams.set('start_time', arg.start.getTime() / 1000)
          url.searchParams.set('end_time', arg.end.getTime() / 1000)

          window.location = url
        
        calendar.unselect()
        break; 

        case "2": //externe Buchung 
          var url = new URL("/create-intern", window.location.origin)
          

          window.location = url
        
        calendar.unselect()
        break; 
      }},
      dayMaxEvents: true,  



      

      
      //Buchungsdetails ansehen
      eventClick:function(arg) {
        var title = confirm('Buchungsdetails ansehen?');
        if (title) {
          var url = new URL("/bookings/" + arg.event.id, window.location.origin)
          window.open(url, "_blank")

        }
      },






      //Bildschirmgröße
      contentHeight: 700,
      droppable: true, // this allows things to be dropped onto the calendar
      



 





//neue Buchungen anlegen

      //dateClick: function(info) {
      //alert('clicked ' + info.dateStr + ' on resource ' + info.resource.id);
    //},

    //select: function(info) {
      //alert('selected ' + info.startStr + ' to ' + info.endStr + ' on resource ' + info.resource.id);
      //calendar.addEvent({
        //title: 'dynamic event', 
        //start: info.startStr,
        //end: info.endStr,
        //allDay: true
      //});
    //},





    





      locale: 'de',
      initialView: 'resourceTimelineTenDay',
      scrollTime: '08:00',

      
      views: {
        resourceTimelineDay: {
          type: 'resourceTimelineDay',
          duration: { days: 2 },
          slotDuration: '00:30:00',
          buttonText: 'Tagesansicht'
        },
        resourceTimelineThreeDays: {
          type: 'resourceTimeline',
          duration: { days: 3 },
          slotDuration: '00:30:00',
          buttonText: '3 Tage'
        },
        resourceTimelineTenDay: {
          type: 'resourceTimeline',
          duration: { days: 7 },
          slotDuration: '00:30:00',
          buttonText: 'Wochenasicht'
        }
      },

     
     

      resourceAreaHeaderContent: 'Fahrzeug',

      resourceOrder: 'desc_web',




      
      //Autopark
      resources: [
        @foreach($vehicles as $vehicle)
        { id: {{ $vehicle->id }},
        html: true,
       
        category: '{{ $vehicle->category->name }}',
        desc_intern: '{{ $vehicle->desc_intern}}',
        registration_mark: '{{ $vehicle->registration_mark}}',
        name: '{{ $vehicle->city->name}}',
        name_2: '{{ $vehicle->district->name}}',
        desc_web: '({{$vehicle->desc_web}})',
      


        title: "<th style='color: rgb(0, 128, 0);'>{{ $vehicle->category->name}}</th> {{ $vehicle->desc_intern}}",

        //title: "{{ $vehicle->category->name}} {{ $vehicle->desc_intern}}",
       


      
          businessHours: [
            @foreach($vehicle->booking_start_times as $start_times)
          { 
            daysOfWeek: [ 0, 1, 2, 3, 4, 5, 6 ],
            startTime:  '{{ $start_times->time}}', 
            endTime: '{{ date("H:i", strtotime($start_times->time. "+30 minutes") ) }}' ,
          }, @endforeach
        ],
        },
        @endforeach 
      ],
      

      

      //Resources 4 colors
      resourceLabelContent: function(arg, createElement) {
        html = ""
        html += "<span class='text-warning'>" + arg.resource.extendedProps.category + "</span> "
        html += "<span class='text-info'>" + arg.resource.extendedProps.desc_intern + "</span> "
        html += "<span class='text-muted'>" + arg.resource.extendedProps.registration_mark + "</span> "
        html += "</br>"
        html += "<span class='vehicle-location'>" + arg.resource.extendedProps.name + "</span> "
        html += "<span class='vehicle-location'>" + arg.resource.extendedProps.name_2 + "</span> "
        html += "<span class='vehicle-location'>" + arg.resource.extendedProps.desc_web + "</span> "

        return {html: html}
      },


        //Mieter gleich Fahrer
    eventDidMount: function(info) {
      var drivers = ''
      var a = new String(info.event.extendedProps.mieter);

     
      
      Object.entries(info.event.extendedProps.fahrer).forEach(([key, value]) => {
        drivers += "</br>Fahrer " + " " + (parseInt(key) + 1) + ": " + value + "<br>"
        console.log(info.event.extendedProps.fahrer ,a);
       





        //Sratus and Status Payment Color 
        //console.log(info.event.extendedProps.payment);
            if(-1 != info.event.extendedProps.payment.indexOf("RG versendet")) {
              
             

                   info.el.title  = "Dauer: " + " " + 
        info.event.extendedProps.starti + ' ' +  info.event.extendedProps.startiTime + 
        " bis" + ' ' + info.event.extendedProps.endi + ' ' + info.event.extendedProps.endiTime +  "</br>" + "</br>" +
        " " + "Miter: " + 
        info.event.extendedProps.mieter + "</br>" +
        drivers +  "</br>" + "</br>" + "</span> <span class='label label-info'>" + 
        info.event.extendedProps.status + "</span> <span class='label label-success'>" + 
        info.event.extendedProps.payment
            }


            if(-1 != info.event.extendedProps.payment.indexOf("Gutschrift")) {
            //console.log(info.event.extendedProps.payment);
                   info.el.title  = "Dauer: " + " " + 
        info.event.extendedProps.starti + ' ' +  info.event.extendedProps.startiTime + 
        " bis" + ' ' + info.event.extendedProps.endi + ' ' + info.event.extendedProps.endiTime +  "</br>" + "</br>" +
        " " + "Miter: " + 
        info.event.extendedProps.mieter + "</br>" +
        drivers +  "</br>" + "</span> <span class='label label-info'>" + 
        info.event.extendedProps.status + "</span> <span class='label label-info'>" + 
        info.event.extendedProps.payment
            }

            if(-1 != info.event.extendedProps.payment.indexOf("bezahlt")) {
              if(-1 != info.event.extendedProps.status.indexOf("freigegeben")) {
            //console.log(info.event.extendedProps.payment);
                   info.el.title  = "Dauer: " + " " + 
        info.event.extendedProps.starti + ' ' +  info.event.extendedProps.startiTime + 
        " bis" + ' ' + info.event.extendedProps.endi + ' ' + info.event.extendedProps.endiTime +  "</br>" + "</br>" +
        " " + "Miter: " + 
        info.event.extendedProps.mieter + "</br>" +
        drivers +  "</br>" + "</span> <span class='label label-success'>" + 
        info.event.extendedProps.status + "</span> <span class='label label-success'>" + 
        info.event.extendedProps.payment
            }
          }

          if(-1 != info.event.extendedProps.payment.indexOf("bezahlt")) {
              if(-1 != info.event.extendedProps.status.indexOf("storniert")) {
            //console.log(info.event.extendedProps.payment);
                   info.el.title  = "Dauer: " + " " + 
        info.event.extendedProps.starti + ' ' +  info.event.extendedProps.startiTime + 
        " bis" + ' ' + info.event.extendedProps.endi + ' ' + info.event.extendedProps.endiTime +  "</br>" + "</br>" +
        " " + "Miter: " + 
        info.event.extendedProps.mieter + "</br>" +
        drivers +  "</br>" + "</span> <span class='label label-danger'>" + 
        info.event.extendedProps.status + "</span> <span class='label label-success'>" + 
        info.event.extendedProps.payment
            }
          }

            if(-1 != info.event.extendedProps.payment.indexOf("Buchhaltung")) {
            //console.log(info.event.extendedProps.payment);
                   info.el.title  = "Dauer: " + " " + 
        info.event.extendedProps.starti + ' ' +  info.event.extendedProps.startiTime + 
        " bis" + ' ' + info.event.extendedProps.endi + ' ' + info.event.extendedProps.endiTime +  "</br>" + "</br>" +
        " " + "Miter: " + 
        info.event.extendedProps.mieter + "</br>" +
        drivers +  "</br>" + "</span> <span class='label label-warning'>" + 
        info.event.extendedProps.status + "</span> <span class='label label-warning'>" + 
        info.event.extendedProps.payment 
            }
        



      })






      $(info.el).tooltip({
        placement: 'top',
        trigger: 'hover',
        container: 'body',
        html: true,

        

        title: "Dauer: " + " " + 
        info.event.extendedProps.starti + ' ' +  info.event.extendedProps.startiTime + 
        " bis" + ' ' + info.event.extendedProps.endi + ' ' + info.event.extendedProps.endiTime +  "</br>" +
        " " +
        info.event.extendedProps.mieter + "</br>" +
        drivers + "Notizen: " + info.event.extendedProps.note + "</br>" + "</br>" +
        "</span> <span class='label label-info'>" + 
        info.event.extendedProps.status + info.event.extendedProps.payment
      } ); 
    },

     
   

   

      drop: function(arg) {
        console.log('drop date: ' + arg.dateStr)

        if (arg.resource) {
          console.log('drop resource: ' + arg.resource.id)
        }

        // is the "remove after drop" checkbox checked?
        if (document.getElementById('drop-remove').checked) {
          // if so, remove the element from the "Draggable Events" list
          arg.draggedEl.parentNode.removeChild(arg.draggedEl);
        }
      },
      eventReceive: function(arg) { // called when a proper external event is dropped
        console.log('eventReceive', arg.event);
      },
      eventDrop: function(arg) { // called when an event (already on the calendar) is moved
        console.log('eventDrop', arg.event);
      },
      
    });

  
    
    calendar.render();

  });



</script>

@stop

@section('container-override')
<div class="container2">
	@stop

@section ('content')
      
 </div>

 <div id='wrap'>
    <div id='calendar'></div>

    <div style='clear:both'></div>


  </div>

  

  @stop

  


